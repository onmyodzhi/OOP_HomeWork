Некоторые методы, такие как fly() и swim(), не имеют смысла для общего класса Animal,
поскольку не все животные умеют летать или плавать. В данном случае, они просто выводят сообщение,
что животное не может выполнить данное действие. Это может быть неудобно,
если у нас будет большое количество подклассов с разными возможностями.

В будущем, если мы захотим добавить еще дополнительные способности животных, например, "прыгать" или "копать",
мы будем вынуждены добавлять новые методы в базовый класс Animal, даже если не все подклассы смогут использовать эти методы.
Это приводит к нарушению принципа единственной ответственности и усложняет поддержку кода.
Такая иерархия классов может не быть подходящей для представления разнообразия животного мира.

Вопросы, возникшие при выполнении задания:
    Какой подход лучше выбрать для моделирования разнообразия способностей животных?
    Как переопределять private поля в классах наследниках(потому что никакого другого метода кроме как переопределять Set или Get
    я не нашел, это нарушает принцип DRY).